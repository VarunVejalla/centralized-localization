
;; Function f (f, funcdef_no=0, decl_uid=3175, cgraph_uid=1, symbol_order=0)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int f (int x)
{
  int D.3184;

  <bb 2> :
  [hello.c:4:13] D.3184 = x * 5;

  <bb 3> :
<L0>:
  [hello.c:4:13 discrim 1] return D.3184;

}



;; Function foo (foo, funcdef_no=1, decl_uid=3178, cgraph_uid=2, symbol_order=1)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
int foo (int x)
{
  int D.3188;

  <bb 2> :
  [hello.c:8:8] if (x > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  [hello.c:9:16] D.3188 = f (x);
  [hello.c:9:16 discrim 1] // predicted unlikely by early return (on trees) predictor.
  [hello.c:9:16] goto <bb 5>; [INV]

  <bb 4> :
  [hello.c:11:16] D.3188 = x;
  [hello.c:11:16] // predicted unlikely by early return (on trees) predictor.

  <bb 5> :
<L2>:
  return D.3188;

}



;; Function main (main, funcdef_no=2, decl_uid=3181, cgraph_uid=3, symbol_order=2)

Removing basic block 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3
;; 2 succs { 3 }
;; 3 succs { 1 }
int main ()
{
  int D.3190;

  <bb 2> :
  [hello.c:15:5] _1 = foo (5);
  [hello.c:15:5 discrim 1] printf ([hello.c:15:12] "%d\n", _1);
  [hello.c:16:12] D.3190 = 0;

  <bb 3> :
<L0>:
  return D.3190;

}


